version: '3.4'

services:
  orchestratordashboard:
    image: indigopaas/orchestrator-dashboard
    ports:
      - 5001:5001
    volumes:
      - "../certs:/certs"
      - "../trusted_certs:/trusted_certs"
      - "../instance/docker-config.json:/app/instance/config.json"
      - "../instance/uploads:/app/instance/uploads"
      # - "../instance/tosca-templates:/app/instance/tosca-templates"
      # - "../instance/dashboard-configuration:/app/instance/dashboard-configuration"
      # - "../instance/vault-config.json:/app/instance/vault-config.json"
      # - "../instance/s3-config.json:/app/instance/s3-config.json"        
    networks:
      - dev-network
    environment:
      ENABLE_HTTPS: True
      FLASK_TOSCA_TEMPLATES_DIR: /app/instance/tosca-templates
      FLASK_SETTINGS_DIR: /app/instance/dashboard-configuration
      FLASK_UPLOAD_FOLDER: /app/instance/uploads
      FLASK_SQLALCHEMY_DATABASE_URI: mysql+pymysql://dashboard:${MYSQL_PASSWORD:-changeit}@db:3306/orchestrator_dashboard
      FLASK_REDIS_URL: redis://:${REDIS_PASSWORD:-changeit}@redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started    

  db:
    image: mysql:5.7
    container_name: db
    restart: always
    ports:
      - 3307:3306
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-changeit}
      MYSQL_DATABASE: orchestrator_dashboard
      MYSQL_USER: dashboard
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-changeit}
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${MYSQL_ROOT_PASSWORD:-changeit}", "--silent"]
      interval: 5s
      timeout: 5s
      retries: 50        

  redis:
    image: redis:latest
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeit}
    networks:
      - dev-network

  redis_gui:
    restart: always
    image: redislabs/redisinsight:latest
    container_name: redis-gui
    ports:
      - "8001:8001"
    volumes:
      - redis-db:/db
    networks:
      - dev-network

networks:
  dev-network:

volumes:
  db-data:
  redis-data:
  redis-db:
